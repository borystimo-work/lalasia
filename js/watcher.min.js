import{u as d}from"./app.min.js";class f{constructor(t){let r={logging:!0};this.config=Object.assign(r,t),this.observer,document.documentElement.classList.contains("watcher")||this.scrollWatcherRun()}scrollWatcherUpdate(){this.scrollWatcherRun()}scrollWatcherRun(){document.documentElement.classList.add("watcher"),this.scrollWatcherConstructor(document.querySelectorAll("[data-fls-watcher]"))}scrollWatcherConstructor(t){t.length&&d(Array.from(t).map(function(e){if(e.dataset.flsWatcher==="navigator"&&!e.dataset.flsWatcherThreshold){let l;e.clientHeight>2?(l=window.innerHeight/2/(e.clientHeight-1),l>1&&(l=1)):l=1,e.setAttribute("data-fls-watcher-threshold",l.toFixed(2))}return`${e.dataset.flsWatcherRoot?e.dataset.flsWatcherRoot:null}|${e.dataset.flsWatcherMargin?e.dataset.flsWatcherMargin:"0px"}|${e.dataset.flsWatcherThreshold?e.dataset.flsWatcherThreshold:0}`})).forEach(e=>{let l=e.split("|"),o={root:l[0],margin:l[1],threshold:l[2]},a=Array.from(t).filter(function(s){let h=s.dataset.flsWatcherRoot?s.dataset.flsWatcherRoot:null,n=s.dataset.flsWatcherMargin?s.dataset.flsWatcherMargin:"0px",i=s.dataset.flsWatcherThreshold?s.dataset.flsWatcherThreshold:0;if(String(h)===o.root&&String(n)===o.margin&&String(i)===o.threshold)return s}),c=this.getScrollWatcherConfig(o);this.scrollWatcherInit(a,c)})}getScrollWatcherConfig(t){let r={};if(document.querySelector(t.root)?r.root=document.querySelector(t.root):t.root,r.rootMargin=t.margin,!(t.margin.indexOf("px")<0&&t.margin.indexOf("%")<0)){if(t.threshold==="prx"){t.threshold=[];for(let e=0;e<=1;e+=.005)t.threshold.push(e)}else t.threshold=t.threshold.split(",");return r.threshold=t.threshold,r}}scrollWatcherCreate(t){this.observer=new IntersectionObserver((r,e)=>{r.forEach(l=>{this.scrollWatcherCallback(l,e)})},t)}scrollWatcherInit(t,r){this.scrollWatcherCreate(r),t.forEach(e=>this.observer.observe(e))}scrollWatcherIntersecting(t,r){t.isIntersecting?r.classList.contains("--watcher-view")||r.classList.add("--watcher-view"):r.classList.contains("--watcher-view")&&r.classList.remove("--watcher-view")}scrollWatcherOff(t,r){r.unobserve(t)}scrollWatcherCallback(t,r){const e=t.target;this.scrollWatcherIntersecting(t,e),e.hasAttribute("data-fls-watcher-once")&&t.isIntersecting&&this.scrollWatcherOff(e,r),document.dispatchEvent(new CustomEvent("watcherCallback",{detail:{entry:t}}))}}document.querySelector("[data-fls-watcher]")&&window.addEventListener("load",()=>new f({}));
